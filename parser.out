Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> object_statement
Rule 1     object_statement -> VAR LBRACE statements RBRACE object_statement
Rule 2     object_statement -> empty
Rule 3     statements -> variable_expression statements
Rule 4     statements -> object_statement
Rule 5     statements -> empty
Rule 6     variable_expression -> VAR ASSIGNMENT
Rule 7     empty -> <empty>

Terminals, with rules where they appear

ASSIGNMENT           : 6
LBRACE               : 1
RBRACE               : 1
VAR                  : 1 6
error                : 

Nonterminals, with rules where they appear

empty                : 2 5
object_statement     : 1 4 0
statements           : 1 3
variable_expression  : 3

Parsing method: LALR

state 0

    (0) S' -> . object_statement
    (1) object_statement -> . VAR LBRACE statements RBRACE object_statement
    (2) object_statement -> . empty
    (7) empty -> .

    VAR             shift and go to state 2
    $end            reduce using rule 7 (empty -> .)

    object_statement               shift and go to state 1
    empty                          shift and go to state 3

state 1

    (0) S' -> object_statement .



state 2

    (1) object_statement -> VAR . LBRACE statements RBRACE object_statement

    LBRACE          shift and go to state 4


state 3

    (2) object_statement -> empty .

    $end            reduce using rule 2 (object_statement -> empty .)
    RBRACE          reduce using rule 2 (object_statement -> empty .)


state 4

    (1) object_statement -> VAR LBRACE . statements RBRACE object_statement
    (3) statements -> . variable_expression statements
    (4) statements -> . object_statement
    (5) statements -> . empty
    (6) variable_expression -> . VAR ASSIGNMENT
    (1) object_statement -> . VAR LBRACE statements RBRACE object_statement
    (2) object_statement -> . empty
    (7) empty -> .

    VAR             shift and go to state 5
    RBRACE          reduce using rule 7 (empty -> .)

    statements                     shift and go to state 6
    object_statement               shift and go to state 7
    variable_expression            shift and go to state 8
    empty                          shift and go to state 9

state 5

    (6) variable_expression -> VAR . ASSIGNMENT
    (1) object_statement -> VAR . LBRACE statements RBRACE object_statement

    ASSIGNMENT      shift and go to state 10
    LBRACE          shift and go to state 4


state 6

    (1) object_statement -> VAR LBRACE statements . RBRACE object_statement

    RBRACE          shift and go to state 11


state 7

    (4) statements -> object_statement .

    RBRACE          reduce using rule 4 (statements -> object_statement .)


state 8

    (3) statements -> variable_expression . statements
    (3) statements -> . variable_expression statements
    (4) statements -> . object_statement
    (5) statements -> . empty
    (6) variable_expression -> . VAR ASSIGNMENT
    (1) object_statement -> . VAR LBRACE statements RBRACE object_statement
    (2) object_statement -> . empty
    (7) empty -> .

    VAR             shift and go to state 5
    RBRACE          reduce using rule 7 (empty -> .)

    variable_expression            shift and go to state 8
    statements                     shift and go to state 12
    object_statement               shift and go to state 7
    empty                          shift and go to state 9

state 9

    (5) statements -> empty .
    (2) object_statement -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 2 (object_statement -> empty .)
    RBRACE          reduce using rule 2 (object_statement -> empty .)

  ! RBRACE          [ reduce using rule 5 (statements -> empty .) ]


state 10

    (6) variable_expression -> VAR ASSIGNMENT .

    VAR             reduce using rule 6 (variable_expression -> VAR ASSIGNMENT .)
    RBRACE          reduce using rule 6 (variable_expression -> VAR ASSIGNMENT .)


state 11

    (1) object_statement -> VAR LBRACE statements RBRACE . object_statement
    (1) object_statement -> . VAR LBRACE statements RBRACE object_statement
    (2) object_statement -> . empty
    (7) empty -> .

    VAR             shift and go to state 2
    $end            reduce using rule 7 (empty -> .)
    RBRACE          reduce using rule 7 (empty -> .)

    object_statement               shift and go to state 13
    empty                          shift and go to state 3

state 12

    (3) statements -> variable_expression statements .

    RBRACE          reduce using rule 3 (statements -> variable_expression statements .)


state 13

    (1) object_statement -> VAR LBRACE statements RBRACE object_statement .

    $end            reduce using rule 1 (object_statement -> VAR LBRACE statements RBRACE object_statement .)
    RBRACE          reduce using rule 1 (object_statement -> VAR LBRACE statements RBRACE object_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 9 resolved using rule (object_statement -> empty)
WARNING: rejected rule (statements -> empty) in state 9
WARNING: Rule (statements -> empty) is never reduced
