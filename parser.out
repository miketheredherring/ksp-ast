Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> object_statement
Rule 1     object_statement -> VAR LBRACE statements RBRACE statements
Rule 2     statements -> variable_expression statements
Rule 3     statements -> object_statement
Rule 4     statements -> empty
Rule 5     variable_expression -> VAR ASSIGNMENT
Rule 6     empty -> <empty>

Terminals, with rules where they appear

ASSIGNMENT           : 5
LBRACE               : 1
RBRACE               : 1
VAR                  : 1 5
error                : 

Nonterminals, with rules where they appear

empty                : 4
object_statement     : 3 0
statements           : 1 1 2
variable_expression  : 2

Parsing method: LALR

state 0

    (0) S' -> . object_statement
    (1) object_statement -> . VAR LBRACE statements RBRACE statements

    VAR             shift and go to state 2

    object_statement               shift and go to state 1

state 1

    (0) S' -> object_statement .



state 2

    (1) object_statement -> VAR . LBRACE statements RBRACE statements

    LBRACE          shift and go to state 3


state 3

    (1) object_statement -> VAR LBRACE . statements RBRACE statements
    (2) statements -> . variable_expression statements
    (3) statements -> . object_statement
    (4) statements -> . empty
    (5) variable_expression -> . VAR ASSIGNMENT
    (1) object_statement -> . VAR LBRACE statements RBRACE statements
    (6) empty -> .

    VAR             shift and go to state 4
    RBRACE          reduce using rule 6 (empty -> .)

    statements                     shift and go to state 5
    variable_expression            shift and go to state 6
    object_statement               shift and go to state 7
    empty                          shift and go to state 8

state 4

    (5) variable_expression -> VAR . ASSIGNMENT
    (1) object_statement -> VAR . LBRACE statements RBRACE statements

    ASSIGNMENT      shift and go to state 9
    LBRACE          shift and go to state 3


state 5

    (1) object_statement -> VAR LBRACE statements . RBRACE statements

    RBRACE          shift and go to state 10


state 6

    (2) statements -> variable_expression . statements
    (2) statements -> . variable_expression statements
    (3) statements -> . object_statement
    (4) statements -> . empty
    (5) variable_expression -> . VAR ASSIGNMENT
    (1) object_statement -> . VAR LBRACE statements RBRACE statements
    (6) empty -> .

    VAR             shift and go to state 4
    RBRACE          reduce using rule 6 (empty -> .)
    $end            reduce using rule 6 (empty -> .)

    variable_expression            shift and go to state 6
    statements                     shift and go to state 11
    object_statement               shift and go to state 7
    empty                          shift and go to state 8

state 7

    (3) statements -> object_statement .

    RBRACE          reduce using rule 3 (statements -> object_statement .)
    $end            reduce using rule 3 (statements -> object_statement .)


state 8

    (4) statements -> empty .

    RBRACE          reduce using rule 4 (statements -> empty .)
    $end            reduce using rule 4 (statements -> empty .)


state 9

    (5) variable_expression -> VAR ASSIGNMENT .

    VAR             reduce using rule 5 (variable_expression -> VAR ASSIGNMENT .)
    RBRACE          reduce using rule 5 (variable_expression -> VAR ASSIGNMENT .)
    $end            reduce using rule 5 (variable_expression -> VAR ASSIGNMENT .)


state 10

    (1) object_statement -> VAR LBRACE statements RBRACE . statements
    (2) statements -> . variable_expression statements
    (3) statements -> . object_statement
    (4) statements -> . empty
    (5) variable_expression -> . VAR ASSIGNMENT
    (1) object_statement -> . VAR LBRACE statements RBRACE statements
    (6) empty -> .

    VAR             shift and go to state 4
    RBRACE          reduce using rule 6 (empty -> .)
    $end            reduce using rule 6 (empty -> .)

    statements                     shift and go to state 12
    variable_expression            shift and go to state 6
    object_statement               shift and go to state 7
    empty                          shift and go to state 8

state 11

    (2) statements -> variable_expression statements .

    RBRACE          reduce using rule 2 (statements -> variable_expression statements .)
    $end            reduce using rule 2 (statements -> variable_expression statements .)


state 12

    (1) object_statement -> VAR LBRACE statements RBRACE statements .

    $end            reduce using rule 1 (object_statement -> VAR LBRACE statements RBRACE statements .)
    RBRACE          reduce using rule 1 (object_statement -> VAR LBRACE statements RBRACE statements .)

